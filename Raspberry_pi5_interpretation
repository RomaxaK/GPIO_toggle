import tkinter as tk
import serial
import threading

SERIAL_PORT = 'COM9'
BAUD_RATE = 115200

class SerialReader(threading.Thread):
    def __init__(self, callback=None, port=SERIAL_PORT, baud=BAUD_RATE):
        super().__init__(daemon=True)
        self.callback = callback
        self.ser = serial.Serial(port, baud, timeout=1)

    def run(self):
        while True:
            try:
                line = self.ser.readline().decode(errors='ignore').strip()
                if line.startswith("STATS") and self.callback:
                    parts = line.split(',')
                    if len(parts) == 3:
                        try:
                            _, req, grant = parts
                            self.callback(int(req.strip()), int(grant.strip()), line)
                        except:
                            pass
            except Exception as e:
                print(f"Serial error: {e}")

    def send_command_async(self, cmd: str):
        def send():
            try:
                print(f"Sending: {cmd}")
                self.ser.write((cmd + '\n').encode())
            except Exception as e:
                print(f"Write error: {e}")
        threading.Thread(target=send, daemon=True).start()

class SimpleGrantGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Grant Mode Control")

        self.reader = SerialReader()
        self.reader.start()

        self.create_widgets()

    def create_widgets(self):
        tk.Button(self.root, text="Always Grant", width=25,
                  command=lambda: self.reader.send_command_async("CMD,GRANT_MODE,ALWAYS")).pack(pady=10)
        tk.Button(self.root, text="No Grant", width=25,
                  command=lambda: self.reader.send_command_async("CMD,GRANT_MODE,NONE")).pack(pady=10)
        tk.Button(self.root, text="Random Grant", width=25,
                  command=lambda: self.reader.send_command_async("CMD,GRANT_MODE,RANDOM")).pack(pady=10)

if __name__ == "__main__":
    root = tk.Tk()
    app = SimpleGrantGUI(root)
    root.mainloop()
